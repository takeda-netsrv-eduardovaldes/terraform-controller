#!/usr/bin/env bash ;

read -p "Enter Target-Profile [ e.g.: default ] ?: " aws_default_profile ;
read -p "Enter Target-Region  [ e.g.: us-east-1 ] ?: " aws_default_region ;
read -p "Enter Target-Account [ e.g.: 123456789012 ] ?: " aws_default_account ;
read -p "Enter Target-KeyPair [ e.g.: ~/.ssh/id_rsa ] ?: " keypair_file ;

export terraform_restore="{{ console.Restore_Folder }}" ;

mkdir -p ${terraform_restore} ;
cd ${terraform_restore} ;

git clone {{ console.Remote_Origin }}.git ${terraform_restore} ;
git checkout -b restore {{ console.Commit_SHAID }} ;

cp -pr {{ github.workspace }}/.ssh ${terraform_restore} ;

echo -e "\nFetching Terraform components ... \n";
aws --profile ${aws_default_profile} \
    --region ${aws_default_region} \
    s3 cp s3://{{ console.S3Bucket }}/{{ console.Remote_Path }} \
    ${terraform_restore} \
    --recursive \
  ;

echo -e "\nDisplaying Terraform file-structure ...\n" ;
tree -FCla --prune -I .git $(pwd) ;

if [[ -f ${terraform_restore}/terraform.tfstate.d/dev/terraform.tfplan ]]; then
        echo -e "\nInitializing Terraform ... \n" ;
        eval {{ console.Verbosity }} \
             terraform init ; echo -e ;
        echo -e "\nTerraform Create|Select Workspace [{{ console.Target_Workspace }}] ... \n" ;
        eval {{ console.Verbosity }} \
             terraform workspace select {{ console.Target_Workspace }} || terraform workspace new {{ console.Target_Workspace }} ;
        echo -e "\nTerraform Listing Workspaces ... \n" ;
        eval {{ console.Verbosity }} \
             terraform workspace list ;
        echo -e "\nExecuting Terraform ..." ;
        eval {{ console.Verbosity }} \
             TF_VAR_region={{ console.Region }} \
             terraform {{ console.Terraform_Action }} ;
  else  echo -e "\nWarning: Unable to download Terraform components! \n" ;
        exit 1 ;
fi ;
